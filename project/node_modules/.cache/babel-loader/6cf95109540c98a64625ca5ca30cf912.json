{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport const getItems = createAsyncThunk('item/getItems', async () => {\n  const api = await fetch('http://127.0.0.1:8000/api/items');\n  const response = await api.json();\n  return response;\n});\nexport const addItem = createAsyncThunk('item/addItem', async (item, thunkAPI) => {\n  const response = await axios.post('http://127.0.0.1:8000/api/add_item', item);\n\n  if (response.status == 200) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been Added Successfully\",\n      type: \"success\"\n    });\n  }\n\n  return response.data;\n});\nexport const updateItem = createAsyncThunk('item/updateItem', async args => {\n  const id = args.id;\n  const response = await fetch(`http://127.0.0.1:8000/api/update_item/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: args.name,\n      description: args.description\n    })\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been updated Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n});\nexport const deleteItem = createAsyncThunk('item/deleteItem', async id => {\n  const response = await fetch(`http://127.0.0.1:8000/api/delete_item/${id}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    Swal.fire({\n      title: \"Item\",\n      text: \"Has been deleted Successfully\",\n      type: \"success\"\n    });\n  }\n\n  const res = response.json();\n  return res;\n});\nconst itemSlice = createSlice({\n  name: 'item',\n  initialState: {\n    items: [],\n    status: null\n  },\n  extraReducers: {\n    //get item from api\n    [getItems.fulfilled]: (state, action) => {\n      state.status = 'success fetch data';\n      state.items = action.payload;\n    },\n    [getItems.pending]: state => {\n      state.status = 'pending  fetch data';\n    },\n    [getItems.rejected]: state => {\n      state.status = 'rejected  fetch data';\n    },\n    //add item to api\n    [addItem.fulfilled]: (state, action) => {\n      state.status = 'success send data';\n      state.items.push(action.payload);\n    },\n    [addItem.pending]: state => {\n      state.status = 'pending send data';\n    },\n    [addItem.rejected]: state => {\n      state.status = 'rejected send data';\n    },\n    //update item in api\n    [updateItem.fulfilled]: (state, action) => {\n      state.status = 'success update data';\n      const {\n        id\n      } = action.payload;\n      const item = state.items.find(item => item.id == id);\n      item.name = action.payload.name;\n      item.description = action.payload.description;\n      item.image = action.payload.image;\n    },\n    [updateItem.pending]: state => {\n      state.status = 'pending update data';\n    },\n    [updateItem.rejected]: state => {\n      state.status = 'rejected update data';\n    },\n    //delete item in api\n    [deleteItem.fulfilled]: (state, action) => {\n      state.status = 'success delete data';\n      const {\n        id\n      } = action.payload;\n      state.items = state.items.filter(item => item.id != id);\n    },\n    [deleteItem.pending]: state => {\n      state.status = 'pending delete data';\n    },\n    [deleteItem.rejected]: state => {\n      state.status = 'rejected delete data';\n    }\n  }\n});\nexport default itemSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","Swal","getItems","api","fetch","response","json","addItem","item","thunkAPI","post","status","fire","title","text","type","data","updateItem","args","id","method","headers","body","JSON","stringify","name","description","ok","res","deleteItem","itemSlice","initialState","items","extraReducers","fulfilled","state","action","payload","pending","rejected","push","find","image","filter","reducer"],"sources":["C:/xampp/htdocs/project8-mini-/project/src/redux/itemSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\nimport Swal from 'sweetalert2';\n\n\n\nexport const getItems = createAsyncThunk(\n    'item/getItems',\n    async ()=>{\n        const api = await fetch('http://127.0.0.1:8000/api/items');\n        const response = await api.json();\n\n        return response;\n    }\n);\n\nexport const addItem = createAsyncThunk(\n    'item/addItem',\n    async (item , thunkAPI)=>{\n \n        const response = await axios.post('http://127.0.0.1:8000/api/add_item',item);\n        \n        if(response.status ==200){\n            Swal.fire({\n                title: \"Item\",\n                text: \"Has been Added Successfully\",\n                type: \"success\"\n            });\n        }\n        return response.data;\n\n\n    }\n);\n\nexport const updateItem = createAsyncThunk(\n    'item/updateItem',\n    async (args)=>{\n       \n        const id = args.id;\n        const response =await fetch(`http://127.0.0.1:8000/api/update_item/${id}`,{\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify({name:args.name , description:args.description}),\n        })\n        \n        if(response.ok){\n            Swal.fire({\n                title: \"Item\",\n                text: \"Has been updated Successfully\",\n                type: \"success\"\n            });\n        }\n        const res = response.json();\n        return res;\n    }\n);\n\nexport const deleteItem = createAsyncThunk(\n    'item/deleteItem',\n    async (id)=>{\n        \n        const response =await fetch(`http://127.0.0.1:8000/api/delete_item/${id}`,{\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            \n        })\n        if(response.ok){\n            Swal.fire({\n                title: \"Item\",\n                text: \"Has been deleted Successfully\",\n                type: \"success\"\n            });\n        }\n        const res = response.json();\n        return res;\n        \n    }\n)\n\nconst itemSlice = createSlice({\n    name:'item',\n    initialState:{items:[] , status:null},\n    extraReducers:{\n        //get item from api\n        [getItems.fulfilled]:(state , action)=>{\n            state.status = 'success fetch data';\n            state.items = action.payload;\n\n        },\n        [getItems.pending]:(state  )=>{\n            state.status = 'pending  fetch data';\n            \n        },\n        [getItems.rejected]:(state )=>{\n            state.status = 'rejected  fetch data';\n        },\n\n        //add item to api\n\n        [addItem.fulfilled]:(state , action)=>{\n            state.status = 'success send data';\n            state.items.push(action.payload);\n            \n\n        },\n        [addItem.pending]:(state  )=>{\n            state.status = 'pending send data';\n            \n        },\n        [addItem.rejected]:(state )=>{\n            state.status = 'rejected send data';\n        },\n\n\n        //update item in api\n        [updateItem.fulfilled]:(state , action)=>{\n            state.status = 'success update data';\n            const {id} = action.payload;\n            const item = state.items.find((item)=>item.id == id);\n            item.name = action.payload.name;\n            item.description = action.payload.description;\n            item.image = action.payload.image;\n            \n        },\n        [updateItem.pending]:(state  )=>{\n            state.status = 'pending update data';\n            \n        },\n        [updateItem.rejected]:(state )=>{\n            state.status = 'rejected update data';\n        },\n\n\n        //delete item in api\n        [deleteItem.fulfilled]:(state , action)=>{\n            state.status = 'success delete data';\n            const {id} = action.payload;\n             state.items = state.items.filter((item)=>item.id != id);\n            \n        },\n        [deleteItem.pending]:(state  )=>{\n            state.status = 'pending delete data';\n            \n        },\n        [deleteItem.rejected]:(state )=>{\n            state.status = 'rejected delete data';\n        },\n\n        \n}\n})\n\nexport default itemSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}